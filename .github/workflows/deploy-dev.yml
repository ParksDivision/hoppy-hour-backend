name: Deploy to Development

on:
  push:
    branches: [ main, develop ]  # Deploy on push to main or develop
  pull_request:
    branches: [ main ]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to Development Server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DEV_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.DEV_SSH_KEY }}
        script: |
          # Navigate to app directory
          cd ~/hoppy-hour-backend
          
          # Pull latest changes
          git pull origin main
          
          # Update environment variables
          cat > .env << 'EOF'
          # Database
          DATABASE_URL="${{ secrets.DATABASE_URL }}"
          
          # AWS Configuration
          AWS_REGION="${{ secrets.AWS_REGION }}"
          AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_S3_BUCKET_NAME="${{ secrets.AWS_S3_BUCKET_NAME }}"
          
          # Cloudflare CDN
          CLOUDFLARE_CDN_ENABLED="${{ secrets.CLOUDFLARE_CDN_ENABLED }}"
          CLOUDFLARE_CDN_BASE_URL="${{ secrets.CLOUDFLARE_CDN_BASE_URL }}"
          CLOUDFLARE_ZONE_ID="${{ secrets.CLOUDFLARE_ZONE_ID }}"
          CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"
          
          # API Keys
          GOOGLE_PLACES_API_KEY="${{ secrets.GOOGLE_PLACES_API_KEY }}"
          YELP_API_KEY="${{ secrets.YELP_API_KEY }}"
          
          # Redis
          REDIS_HOST="${{ secrets.REDIS_HOST }}"
          REDIS_PORT="${{ secrets.REDIS_PORT }}"
          REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"
          REDIS_URL="${{ secrets.REDIS_URL }}"
          
          # Bull Dashboard
          BULL_ADMIN_USER="${{ secrets.BULL_ADMIN_USER }}"
          BULL_ADMIN_PASS="${{ secrets.BULL_ADMIN_PASS }}"
          
          # Cost Control
          S3_MONTHLY_BUDGET="${{ secrets.S3_MONTHLY_BUDGET }}"
          S3_RATE_LIMIT_HOUR="${{ secrets.S3_RATE_LIMIT_HOUR }}"
          S3_RATE_LIMIT_DAY="${{ secrets.S3_RATE_LIMIT_DAY }}"
          S3_EMERGENCY_THRESHOLD="${{ secrets.S3_EMERGENCY_THRESHOLD }}"
          
          # Application
          NODE_ENV="${{ secrets.NODE_ENV }}"
          PORT="${{ secrets.PORT }}"
          FRONTEND_URL="${{ secrets.FRONTEND_URL }}"
          LOG_LEVEL="${{ secrets.LOG_LEVEL }}"
          EOF
          
          # Install dependencies
          npm ci
          
          # Build application
          npm run build
          
          # Restart the application
          echo "=== Restarting application ==="
          pm2 restart hoppy-hour-dev || pm2 start dist/src/server.js --name "hoppy-hour-dev"
          
          # Show status
          echo "=== PM2 Status ==="
          pm2 status
          
          # Show recent logs
          echo "=== Recent Logs ==="
          pm2 logs hoppy-hour-dev --lines 10
          
          # Wait a moment for app to start
          sleep 5
          
          # Test the application
          echo "=== Testing Application ==="
          curl -f localhost:3001/health || echo "Health check failed"
          curl -f localhost:3001/ || echo "Root endpoint failed"

  test-deployment:
    needs: deploy-dev
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Test Deployment
      run: |
        # Test external endpoint
        curl -f http://${{ secrets.DEV_SERVER_HOST }}:3001/health || exit 1
        echo "âœ… Deployment successful!"